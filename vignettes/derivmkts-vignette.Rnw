%\VignetteEngine{knitr::knitr} 
%\VignetteIndexEntry{derivmkts Package Overview}
\documentclass{article}
\input{rlistings}
\title{Option Pricing Functions to Accompany \emph{Derivatives Markets}}
\author{Robert McDonald}
\date{\today}

\lstMakeShortInline{|}

<<echo=FALSE, message=FALSE, warning=FALSE>>=
library(highlight)
library(knitr)
##homedir <- '/home/rmcd/tex/d67/Rtutorial/'
options(digits=4)
figsize <- 4.5
opts_chunk$set(size='footnotesize', prompt=FALSE, comment=NA, 
               fig.align='center', fig.width = figsize, 
               fig.height=figsize, out.width='3.75in')

#              , fig.width=4.5*3.75/3.25, fig.height=4.5, 
#              , out.width='3.75in', out.height='3.25in'
#               )
opts_knit$set(highlight = TRUE, 
              eval.after='fig.cap',
              prompt=TRUE,
              renderer=renderer_latex(document=FALSE),
              size='footnotesize') 
@ 


\begin{document}
\maketitle
\tableofcontents


<<echo=FALSE>>=
library(knitr)
library(derivmkts)
library(markdown)

opts_chunk$set(collapse=TRUE)
@

\section{Introduction}

This vignette is intended to a road map to the functions in the
functions in the \emph{derivmkts} package, and also to provide some
additional documentation and examples. The package was conceived as a
companion to the book \emph{Derivatives Markets}. There are of course
other option pricing packages for R, but this package primarily uses
function names corresponding to the usage in the book.


\section{Basic European and American Option Pricing}

\subsection{Black-Scholes Pricing of European Options}

The functions |bscall|, |bsput|, and |bsopt| provide basic pricing of
European calls and puts. There are also options with binary payoffs:
cash-or-nothing and asset-or-nothing options. All functions are
vectorized. The function |bsopt| provides option greeks. Here are some
examples:

<<>>=
s <- 100; k <- 100; r <- 0.08; v <- 0.30; tt <- 2; d <- 0
bscall(s, k, v, r, tt, d)
bsput(s, k, v, r, tt, d)
bsput(s, c(95, 100, 105), v, r, tt, d)
bsopt(s, c(95, 100, 105), v, r, tt, d)$Call
@

Table \ref{tab:bslist} lists the Black-Scholes related functions in
the package.

\begin{table}[btp]
  \centering
  \begin{tabular}{cp{4in}}
    Function& Description \\ \hline
    bscall & European call\\
    bsput & European put\\ 
    bsopt & European call and put and associated Greeks: delta, gamma,
            vega, theta, rho, psi, and elasticity \\
    assetcall &  Asset-or-nothing call\\
    assetput &  Asset-or-nothing put\\
    cashcall &  Cash-or-nothing call\\ 
    cashput & Cash-or-nothing put
  \end{tabular}
  \caption{Black-Scholes related option pricing functions}
  \label{tab:bslist}
\end{table}


\subsection{Binomial Pricing of European and American Options}

Binomial option pricing provides a way to compute the price of
American options.  There are two functions related to binomial
pricing: 
\begin{description}
\item[binomopt] computes prices of American and European calls and
  puts. Optionally returns the full array of stock prices, selected
  Greeks (delta, gamma, and theta), the option pricing inputs and
  computed parameters, risk-neutral probabilities, and nodes at which
  exercise occurs.
\item[binomplot] displays the asset price
  tree, the corresponding probability of being at each node, and
  whether or not the option is in exercised at each node. This
  function is described in more detail in Section \ref{sec:binomplot}.
\end{description}

Here are examples of pricing, illustrating the default of just
returning the price, and the ability to return the price plus
parameters, as well as the price, the parameters, and various trees:

<<>>=
s <- 100; k <- 100; r <- 0.08; v <- 0.30; tt <- 2; d <- 0.03
binomopt(s, k, v, r, tt, d, nstep=4)
binomopt(s, k, v, r, tt, d, nstep=4, returnparams=TRUE)
binomopt(s, k, v, r, tt, d, nstep=4, putopt=TRUE)
binomopt(s, k, v, r, tt, d, nstep=4, returntrees=TRUE, putopt=TRUE)
@



\section{Barrier Options}

There are pricing functions for a large number of barrier options: 

\begin{itemize}
\item down-and-in and down-and-out barrier binary options 
\item  up-and-in and up-and-out barrier binary options 
\item  more standard
  down- and up- calls and puts, constructed using the barrier binary
  options
\end{itemize}
Naming for the barrier options generally follows the convention
\begin{verbatim}
[u|d][i|o][call|put]
\end{verbatim}
which means that the option is "up" or "down", "in" or "out", and a
call or put.\footnote{The naming convention here differs from that in
\emph{Derivatives Markets}, in which names are \lstinline{callupin}, callupout,
etc. For consistency, but possibly at the cost of confusion, I have
made both names are available for these functions.}  An up-and-in
call, for example, would be denoted by |uicall|. For binary options,
we add the underlying, which is either the asset or \$1:
cash:

\begin{verbatim}
[asset|cash][u|d][i|o][call|put]
\end{verbatim}


<<>>=
H <- 105
uicall(c(95, 100, 105), k, v, r, tt, d, H)
bscall(c(95, 100, 105), k, v, r, tt, d)
@

\section{Option Greeks}

Greeks for Black-Scholes style and barrier options can be computed in
several ways:
\begin{itemize}
\item For European calls and puts, the |bsopt| function produces
  Greeks in addition to prices. 
\item The |greeks| function takes as arguments the name of the pricing
  function and then its inputs.
\item The |greeks2| function takes the function call as an input.
\end{itemize}
Here are illustrations of the two functions using the same parameters:

<<>>=
H <- 105
greeks(uicall(s, k, v, r, tt, d, H))
greeks2(uicall, s=s, k=k, v=v, r=r, tt=tt, d=d, H=H)

@


\section{Jumps and Stochastic Volatility}
\label{sec:jumps}

\section{Asian Options}
 
\section{Illustrative Functions}


Several functions are intended to illustrate some aspects of the
material. 

\subsection{Quincunx or Galton Board}




\subsection{Plotting the Solution to the Binomial Pricing Model}
\label{sec:binomplot}

The |binomplot| function calls |binomopt| to compute the option price
and the various trees, which it then uses in plotting:

The first plot, figure \ref{fig:binomplot1}, is basic:

<<binomplot1, fig.cap='Basic option plot showing stock prices and nodes at which the option is exercised.\\label{fig:binomplot1}'>>=
binomplot(s, k, v, r, tt, d, nstep=6, american=TRUE, putopt=TRUE)

@ 

The second plot, figure \ref{fig:binomplot2}, adds a display of stock
prices and arrows connecting the nodes.

<<binomplot2, fig.cap='Same plot as Figure \\ref{fig:binomplot1} except that values and arrows are added to the plot.\\label{fig:binomplot2}'>>=
binomplot(s, k, v, r, tt, d, nstep=6, american=TRUE, putopt=TRUE,
    plotvalues=TRUE, plotarrows=TRUE)
@

Finally, here is a plot for an American call when the dividend yield
is positive and |nstep| has a larger value:

<<binomplot3, fig.cap="Binomial plot when nstep is 40.\\label{fig:binomplot3}">>=
d <- 0.06
binomplot(s, k, v, r, tt, d, nstep=40, american=TRUE)
@

Notice that the large value of |nstep| creates a high maximum terminal
stock price, which makes the plot hard to see in the narrow region where
exercise is occurring. We can zoom in on that region by  selecting values for |ylimval|:

<<binomplot4, fig.cap="Binomial plot when nstep is 40 using the argument ylimval to focus on a subset.\\label{fig:binomplot4}">>=
d <- 0.06
binomplot(s, k, v, r, tt, d, nstep=40, american=TRUE, ylimval=c(75, 225))
@

\end{document}
